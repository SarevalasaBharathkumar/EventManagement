{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css'; // Your custom CSS (if any)\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPromotion() {\n  _s();\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState({});\n  const [uploadedImages, setUploadedImages] = useState({});\n  useEffect(() => {\n    // Fetch events and their volunteer data\n    fetch('http://localhost:5000/api/volunteers/events').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched event and volunteer data:', data);\n      setEventVolunteerData(data);\n      setLoading(false);\n      data.forEach(event => {\n        // Fetch associated images for each event using event name\n        fetch(`http://localhost:5000/api/volunteers/events/images/${encodeURIComponent(event.eventName)}`).then(res => res.json()).then(images => {\n          setUploadedImages(prev => ({\n            ...prev,\n            [event.eventName]: images\n          }));\n        });\n      });\n    }).catch(error => {\n      console.error('Error fetching event and volunteer data:', error);\n      setMessage('Error fetching data');\n      setLoading(false);\n    });\n  }, []);\n  const handleFileChange = (event, eventName) => {\n    setImageFiles(prev => ({\n      ...prev,\n      [eventName]: event.target.files[0]\n    }));\n  };\n  const handleUpload = eventName => {\n    const formData = new FormData();\n    formData.append('image', imageFiles[eventName]); // Append image file\n\n    fetch(`http://localhost:5000/api/images/events/${eventName}/upload`, {\n      method: 'POST',\n      body: formData,\n      // FormData should be passed directly\n      headers: {\n        // No need for 'Content-Type' when using FormData\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Upload successful:', data);\n      setMessage(prev => ({\n        ...prev,\n        [eventName]: 'Upload successful!'\n      }));\n      setImageFiles(prev => ({\n        ...prev,\n        [eventName]: null\n      }));\n      // Fetch the new image list after upload\n      fetch(`http://localhost:5000/api/volunteers/events/images/${encodeURIComponent(eventName)}`).then(res => res.json()).then(images => {\n        setUploadedImages(prev => ({\n          ...prev,\n          [eventName]: images\n        }));\n      });\n    }).catch(error => {\n      console.error('Error uploading image:', error);\n      setMessage(prev => ({\n        ...prev,\n        [eventName]: 'Error uploading image'\n      }));\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [Object.values(message).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: msg\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: eventVolunteerData.map(eventData => {\n        var _uploadedImages$event;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: eventData.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), (_uploadedImages$event = uploadedImages[eventData.eventName]) === null || _uploadedImages$event === void 0 ? void 0 : _uploadedImages$event.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/api/images/${image.filename}`,\n                alt: image.filename,\n                className: \"img-fluid mb-2\",\n                style: {\n                  maxHeight: '200px',\n                  objectFit: 'cover'\n                }\n              }, image._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(e, eventData.eventName),\n                className: \"form-control mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), imageFiles[eventData.eventName] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Selected file:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), \" \", imageFiles[eventData.eventName].name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpload(eventData.eventName),\n                className: \"btn btn-primary\",\n                disabled: !imageFiles[eventData.eventName] // Disable if no file selected\n                ,\n                children: \"Upload Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, eventData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPromotion, \"vuw4waQZzYvtPBZ9Q/h8p0gNDNg=\");\n_c = EventPromotion;\nexport default EventPromotion;\nvar _c;\n$RefreshReg$(_c, \"EventPromotion\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventPromotion","_s","eventVolunteerData","setEventVolunteerData","imageFiles","setImageFiles","loading","setLoading","message","setMessage","uploadedImages","setUploadedImages","fetch","then","response","ok","Error","json","data","console","log","forEach","event","encodeURIComponent","eventName","res","images","prev","catch","error","handleFileChange","target","files","handleUpload","formData","FormData","append","method","body","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","msg","index","eventData","_uploadedImages$event","image","src","filename","alt","style","maxHeight","objectFit","_id","type","onChange","e","name","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css'; // Your custom CSS (if any)\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction EventPromotion() {\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState({});\n  const [uploadedImages, setUploadedImages] = useState({});\n\n  useEffect(() => {\n    // Fetch events and their volunteer data\n    fetch('http://localhost:5000/api/volunteers/events')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched event and volunteer data:', data);\n        setEventVolunteerData(data);\n        setLoading(false);\n        data.forEach(event => {\n          // Fetch associated images for each event using event name\n          fetch(`http://localhost:5000/api/volunteers/events/images/${encodeURIComponent(event.eventName)}`)\n            .then((res) => res.json())\n            .then((images) => {\n              setUploadedImages((prev) => ({\n                ...prev,\n                [event.eventName]: images,\n              }));\n            });\n        });\n      })\n      .catch((error) => {\n        console.error('Error fetching event and volunteer data:', error);\n        setMessage('Error fetching data');\n        setLoading(false);\n      });\n  }, []);\n\n  const handleFileChange = (event, eventName) => {\n    setImageFiles((prev) => ({\n      ...prev,\n      [eventName]: event.target.files[0],\n    }));\n  };\n\n const handleUpload = (eventName) => {\n  const formData = new FormData();\n  formData.append('image', imageFiles[eventName]); // Append image file\n\n  fetch(`http://localhost:5000/api/images/events/${eventName}/upload`, {\n    method: 'POST',\n    body: formData,  // FormData should be passed directly\n    headers: {\n      // No need for 'Content-Type' when using FormData\n    },\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then((data) => {\n      console.log('Upload successful:', data);\n      setMessage((prev) => ({ ...prev, [eventName]: 'Upload successful!' }));\n      setImageFiles((prev) => ({ ...prev, [eventName]: null }));\n      // Fetch the new image list after upload\n      fetch(`http://localhost:5000/api/volunteers/events/images/${encodeURIComponent(eventName)}`)\n        .then((res) => res.json())\n        .then((images) => {\n          setUploadedImages((prev) => ({\n            ...prev,\n            [eventName]: images,\n          }));\n        });\n    })\n    .catch((error) => {\n      console.error('Error uploading image:', error);\n      setMessage((prev) => ({ ...prev, [eventName]: 'Error uploading image' }));\n    });\n};\n\n  if (loading) {\n    return <div className=\"text-center mt-5\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"container mt-4\">\n      {Object.values(message).map((msg, index) => (\n        <div key={index} className=\"alert alert-info\">{msg}</div>\n      ))}\n      <div className=\"row\">\n        {eventVolunteerData.map((eventData) => (\n          <div key={eventData._id} className=\"col-md-12 mb-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{eventData.eventName}</h5>\n                {uploadedImages[eventData.eventName]?.map((image) => (\n                  <img\n                    key={image._id}\n                    src={`http://localhost:5000/api/images/${image.filename}`}\n                    alt={image.filename}\n                    className=\"img-fluid mb-2\"\n                    style={{ maxHeight: '200px', objectFit: 'cover' }}\n                  />\n                ))}\n                <input\n                  type=\"file\"\n                  onChange={(e) => handleFileChange(e, eventData.eventName)}\n                  className=\"form-control mb-2\"\n                />\n                {imageFiles[eventData.eventName] && (\n                  <div className=\"mb-2\">\n                    <strong>Selected file:</strong> {imageFiles[eventData.eventName].name}\n                  </div>\n                )}\n                <button\n                  onClick={() => handleUpload(eventData.eventName)}\n                  className=\"btn btn-primary\"\n                  disabled={!imageFiles[eventData.eventName]} // Disable if no file selected\n                >\n                  Upload Image\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );  \n}\n\nexport default EventPromotion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}