{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/EventPlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm() {\n  _s();\n  const [eventName, setEventName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [venue, setVenue] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }, []);\n  const showNotification = (title, body) => {\n    if (Notification.permission === \"granted\") {\n      new Notification(title, {\n        body\n      });\n    }\n  };\n  const handleEventFormSubmit = async e => {\n    e.preventDefault();\n    const today = new Date().setHours(0, 0, 0, 0); // Reset the time to 00:00:00 for comparison\n    if (new Date(startDate).getTime() <= today) {\n      alert('Start date should be after today\\'s date.');\n      return;\n    }\n    if (new Date(endDate).getTime() < new Date(startDate).getTime()) {\n      alert('End date should be on or after the start date.');\n      return;\n    }\n    const newEvent = {\n      eventName,\n      startDate,\n      endDate,\n      venue,\n      imageUrl,\n      eventPrograms: []\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/events/createEvent', newEvent);\n      setEvents([...events, response.data.event]);\n      resetEventForm();\n      showNotification('New Event Created', `Event \"${eventName}\" has been successfully created. Register now!`);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n  const resetEventForm = () => {\n    setEventName('');\n    setStartDate('');\n    setEndDate('');\n    setVenue('');\n    setImageUrl('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleEventFormSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"WA2LGAKn1uNEPnmtt8H/VnYPD4U=\");\n_c = EventForm;\nexport default EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EventForm","_s","eventName","setEventName","startDate","setStartDate","endDate","setEndDate","venue","setVenue","imageUrl","setImageUrl","events","setEvents","Notification","permission","requestPermission","showNotification","title","body","handleEventFormSubmit","e","preventDefault","today","Date","setHours","getTime","alert","newEvent","eventPrograms","response","post","data","event","resetEventForm","error","console","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/EventPlanning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction EventForm() {\n  const [eventName, setEventName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [venue, setVenue] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  const showNotification = (title, body) => {\n    if (Notification.permission === \"granted\") {\n      new Notification(title, { body });\n    }\n  };\n\n  const handleEventFormSubmit = async (e) => {\n    e.preventDefault();\n    const today = new Date().setHours(0, 0, 0, 0); // Reset the time to 00:00:00 for comparison\n    if (new Date(startDate).getTime() <= today) {\n      alert('Start date should be after today\\'s date.');\n      return;\n    }\n\n    if (new Date(endDate).getTime() < new Date(startDate).getTime()) {\n      alert('End date should be on or after the start date.');\n      return;\n    }\n\n    const newEvent = {\n      eventName,\n      startDate,\n      endDate,\n      venue,\n      imageUrl,\n      eventPrograms: []\n    };\n    \n    try {\n      const response = await axios.post('http://localhost:5000/api/events/createEvent', newEvent);\n      setEvents([...events, response.data.event]);\n      resetEventForm();\n      showNotification('New Event Created', `Event \"${eventName}\" has been successfully created. Register now!`);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n\n  const resetEventForm = () => {\n    setEventName('');\n    setStartDate('');\n    setEndDate('');\n    setVenue('');\n    setImageUrl('');\n  };\n\n  return (\n    <form onSubmit={handleEventFormSubmit}>\n      {/* Form inputs for eventName, startDate, endDate, venue, and imageUrl */}\n      <button type=\"submit\">Create Event</button>\n    </form>\n  );\n}\n\nexport default EventForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}