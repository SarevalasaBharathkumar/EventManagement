{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFirebaseToken, onMessage } from 'firebase/messaging';\nimport { firebaseConfig } from './firebaseConfig';\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nexport const setupNotifications = callback => {\n  onMessage(messaging, payload => {\n    console.log('Message received. ', payload); // Debugging line\n    callback(payload);\n  });\n};\nexport const getToken = async () => {\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    const token = await getFirebaseToken(messaging, {\n      vapidKey: 'BF9Q0ytyvFzr7aZRCqwNQRhYGhTkO9NFZyQDU_FUNQ5rV0jcZ0_hYjjB9yd5CGzFGQrPDLEDSX03K8_FR1d3v6g',\n      serviceWorkerRegistration: registration\n    });\n    if (token) {\n      console.log('FCM Token:', token);\n      // Optionally store the token if needed\n      // localStorage.setItem('fcmToken', token);\n      return token;\n    } else {\n      console.log('No registration token available.');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error getting FCM token:', error);\n    return null;\n  }\n};\nexport const checkNotificationPermission = async () => {\n  if (Notification.permission === 'default') {\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  }\n  return Notification.permission === 'granted';\n};","map":{"version":3,"names":["initializeApp","getMessaging","getToken","getFirebaseToken","onMessage","firebaseConfig","app","messaging","setupNotifications","callback","payload","console","log","registration","navigator","serviceWorker","ready","token","vapidKey","serviceWorkerRegistration","error","checkNotificationPermission","Notification","permission","requestPermission"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFirebaseToken, onMessage } from 'firebase/messaging';\nimport { firebaseConfig } from './firebaseConfig';\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\n\nexport const setupNotifications = (callback) => {\n  onMessage(messaging, (payload) => {\n    console.log('Message received. ', payload); // Debugging line\n    callback(payload);\n  });\n};\n\nexport const getToken = async () => {\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    const token = await getFirebaseToken(messaging, {\n      vapidKey: 'BF9Q0ytyvFzr7aZRCqwNQRhYGhTkO9NFZyQDU_FUNQ5rV0jcZ0_hYjjB9yd5CGzFGQrPDLEDSX03K8_FR1d3v6g',\n      serviceWorkerRegistration: registration,\n    });\n\n    if (token) {\n      console.log('FCM Token:', token);\n      // Optionally store the token if needed\n      // localStorage.setItem('fcmToken', token);\n      return token;\n    } else {\n      console.log('No registration token available.');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error getting FCM token:', error);\n    return null;\n  }\n};\n\nexport const checkNotificationPermission = async () => {\n  if (Notification.permission === 'default') {\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  }\n  return Notification.permission === 'granted';\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,IAAIC,gBAAgB,EAAEC,SAAS,QAAQ,oBAAoB;AAC1F,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA,MAAMC,GAAG,GAAGN,aAAa,CAACK,cAAc,CAAC;AACzC,MAAME,SAAS,GAAGN,YAAY,CAACK,GAAG,CAAC;AAEnC,OAAO,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EAC9CL,SAAS,CAACG,SAAS,EAAGG,OAAO,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,OAAO,CAAC,CAAC,CAAC;IAC5CD,QAAQ,CAACC,OAAO,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMR,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMW,YAAY,GAAG,MAAMC,SAAS,CAACC,aAAa,CAACC,KAAK;IACxD,MAAMC,KAAK,GAAG,MAAMd,gBAAgB,CAACI,SAAS,EAAE;MAC9CW,QAAQ,EAAE,yFAAyF;MACnGC,yBAAyB,EAAEN;IAC7B,CAAC,CAAC;IAEF,IAAII,KAAK,EAAE;MACTN,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEK,KAAK,CAAC;MAChC;MACA;MACA,OAAOA,KAAK;IACd,CAAC,MAAM;MACLN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAG,MAAAA,CAAA,KAAY;EACrD,IAAIC,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;IACzC,MAAMA,UAAU,GAAG,MAAMD,YAAY,CAACE,iBAAiB,CAAC,CAAC;IACzD,OAAOD,UAAU,KAAK,SAAS;EACjC;EACA,OAAOD,YAAY,CAACC,UAAU,KAAK,SAAS;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}