{"ast":null,"code":"import{initializeApp}from'firebase/app';import{getMessaging,getToken as getFirebaseToken,onMessage}from'firebase/messaging';import{firebaseConfig}from'./firebaseConfig';const sendTokenToServer=async token=>{try{await fetch('http://localhost:5000/api/events/saveToken',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token})});}catch(error){console.error('Error sending token to server:',error);}};// Initialize Firebase app\nconst app=initializeApp(firebaseConfig);const messaging=getMessaging(app);export const setupNotifications=callback=>{onMessage(messaging,payload=>{console.log('Message received. ',payload);// Debugging line\ncallback(payload);});};export const getToken=async()=>{try{const currentToken=localStorage.getItem('fcmToken');if(currentToken){console.log('FCM Token from localStorage:',currentToken);return currentToken;}else{const permission=await Notification.requestPermission();if(permission==='granted'){console.log('Notification permission granted.');const token=await getFirebaseToken(messaging,{vapidKey:process.env.REACT_APP_FIREBASE_API_KEY});if(token){console.log('FCM Token:',token);localStorage.setItem('fcmToken',token);await sendTokenToServer(token);return token;}else{console.log('Failed to get FCM token.');return null;}}else{console.log('Notification permission not granted.');return null;}}}catch(error){console.error('Error getting FCM token:',error);return null;}};export const checkNotificationPermission=async()=>{if(Notification.permission==='default'){const permission=await Notification.requestPermission();return permission==='granted';}return Notification.permission==='granted';};","map":{"version":3,"names":["initializeApp","getMessaging","getToken","getFirebaseToken","onMessage","firebaseConfig","sendTokenToServer","token","fetch","method","headers","body","JSON","stringify","error","console","app","messaging","setupNotifications","callback","payload","log","currentToken","localStorage","getItem","permission","Notification","requestPermission","vapidKey","process","env","REACT_APP_FIREBASE_API_KEY","setItem","checkNotificationPermission"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFirebaseToken, onMessage } from 'firebase/messaging';\nimport { firebaseConfig } from './firebaseConfig';\n\n\nconst sendTokenToServer = async (token) => {\n  try {\n    await fetch('http://localhost:5000/api/events/saveToken', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ token }),\n    });\n  } catch (error) {\n    console.error('Error sending token to server:', error);\n  }\n};\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\n\nexport const setupNotifications = (callback) => {\n  onMessage(messaging, (payload) => {\n    console.log('Message received. ', payload); // Debugging line\n    callback(payload);\n  });\n};\n\nexport const getToken = async () => {\n  try {\n    const currentToken = localStorage.getItem('fcmToken');\n    if (currentToken) {\n      console.log('FCM Token from localStorage:', currentToken);\n      return currentToken;\n    } else {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        console.log('Notification permission granted.');\n\n        const token = await getFirebaseToken(messaging, { vapidKey: process.env.REACT_APP_FIREBASE_API_KEY });\n        if (token) {\n          console.log('FCM Token:', token);\n          localStorage.setItem('fcmToken', token);\n          await sendTokenToServer(token);\n          return token;\n        } else {\n          console.log('Failed to get FCM token.');\n          return null;\n        }\n      } else {\n        console.log('Notification permission not granted.');\n        return null;\n      }\n    }\n  } catch (error) {\n    console.error('Error getting FCM token:', error);\n    return null;\n  }\n};\nexport const checkNotificationPermission = async () => {\n    if (Notification.permission === 'default') {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return Notification.permission === 'granted';\n  };\n  \n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,YAAY,CAAEC,QAAQ,GAAI,CAAAC,gBAAgB,CAAEC,SAAS,KAAQ,oBAAoB,CAC1F,OAASC,cAAc,KAAQ,kBAAkB,CAGjD,KAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACzC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAC,4CAA4C,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEN,KAAM,CAAC,CAChC,CAAC,CAAC,CACJ,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC,CACD;AACA,KAAM,CAAAE,GAAG,CAAGhB,aAAa,CAACK,cAAc,CAAC,CACzC,KAAM,CAAAY,SAAS,CAAGhB,YAAY,CAACe,GAAG,CAAC,CAEnC,MAAO,MAAM,CAAAE,kBAAkB,CAAIC,QAAQ,EAAK,CAC9Cf,SAAS,CAACa,SAAS,CAAGG,OAAO,EAAK,CAChCL,OAAO,CAACM,GAAG,CAAC,oBAAoB,CAAED,OAAO,CAAC,CAAE;AAC5CD,QAAQ,CAACC,OAAO,CAAC,CACnB,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAlB,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAoB,YAAY,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACrD,GAAIF,YAAY,CAAE,CAChBP,OAAO,CAACM,GAAG,CAAC,8BAA8B,CAAEC,YAAY,CAAC,CACzD,MAAO,CAAAA,YAAY,CACrB,CAAC,IAAM,CACL,KAAM,CAAAG,UAAU,CAAG,KAAM,CAAAC,YAAY,CAACC,iBAAiB,CAAC,CAAC,CACzD,GAAIF,UAAU,GAAK,SAAS,CAAE,CAC5BV,OAAO,CAACM,GAAG,CAAC,kCAAkC,CAAC,CAE/C,KAAM,CAAAd,KAAK,CAAG,KAAM,CAAAJ,gBAAgB,CAACc,SAAS,CAAE,CAAEW,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,0BAA2B,CAAC,CAAC,CACrG,GAAIxB,KAAK,CAAE,CACTQ,OAAO,CAACM,GAAG,CAAC,YAAY,CAAEd,KAAK,CAAC,CAChCgB,YAAY,CAACS,OAAO,CAAC,UAAU,CAAEzB,KAAK,CAAC,CACvC,KAAM,CAAAD,iBAAiB,CAACC,KAAK,CAAC,CAC9B,MAAO,CAAAA,KAAK,CACd,CAAC,IAAM,CACLQ,OAAO,CAACM,GAAG,CAAC,0BAA0B,CAAC,CACvC,MAAO,KAAI,CACb,CACF,CAAC,IAAM,CACLN,OAAO,CAACM,GAAG,CAAC,sCAAsC,CAAC,CACnD,MAAO,KAAI,CACb,CACF,CACF,CAAE,MAAOP,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,KAAI,CACb,CACF,CAAC,CACD,MAAO,MAAM,CAAAmB,2BAA2B,CAAG,KAAAA,CAAA,GAAY,CACnD,GAAIP,YAAY,CAACD,UAAU,GAAK,SAAS,CAAE,CACzC,KAAM,CAAAA,UAAU,CAAG,KAAM,CAAAC,YAAY,CAACC,iBAAiB,CAAC,CAAC,CACzD,MAAO,CAAAF,UAAU,GAAK,SAAS,CACjC,CACA,MAAO,CAAAC,YAAY,CAACD,UAAU,GAAK,SAAS,CAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}