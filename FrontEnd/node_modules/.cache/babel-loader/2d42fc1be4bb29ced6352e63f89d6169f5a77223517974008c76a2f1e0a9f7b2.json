{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPromotion() {\n  _s();\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5000/api/volunteers/events').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched event and volunteer data:', data);\n      setEventVolunteerData(data);\n    }).catch(error => console.error('Error fetching event and volunteer data:', error));\n  }, []);\n  const handleFileChange = (event, eventId) => {\n    const files = event.target.files;\n    setSelectedFiles(prevFiles => ({\n      ...prevFiles,\n      [eventId]: files\n    }));\n  };\n  const handleUpload = eventId => {\n    const files = selectedFiles[eventId];\n    if (!files) return;\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('images', files[i]);\n    }\n\n    // Assuming your API endpoint for uploading images\n    fetch(`http://localhost:5000/api/events/${eventId}/upload-images`, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to upload images');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Images uploaded successfully:', data);\n      // Optionally, update UI with the new images\n    }).catch(error => console.error('Error uploading images:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: eventVolunteerData.map((eventData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mb-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: eventData.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `fileInput-${eventData.id}`,\n                  className: \"form-label\",\n                  children: \"Upload Images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: `fileInput-${eventData.id}`,\n                  className: \"form-control\",\n                  multiple: true,\n                  onChange: event => handleFileChange(event, eventData.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary mt-2\",\n                  onClick: () => handleUpload(eventData.id),\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: eventData.uploadedImages && eventData.uploadedImages.length > 0 ? eventData.uploadedImages.map((image, imgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-4 mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: image.url,\n                      className: \"card-img-top\",\n                      alt: \"Event\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: image.fileName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this)\n                }, imgIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No images uploaded for this event.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPromotion, \"6d9pSwm5QEu/lWEHsT5NawU8tTI=\");\n_c = EventPromotion;\nexport default EventPromotion;\nvar _c;\n$RefreshReg$(_c, \"EventPromotion\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventPromotion","_s","eventVolunteerData","setEventVolunteerData","selectedFiles","setSelectedFiles","fetch","then","response","ok","Error","json","data","console","log","catch","error","handleFileChange","event","eventId","files","target","prevFiles","handleUpload","formData","FormData","i","length","append","method","body","className","children","map","eventData","index","eventName","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","multiple","onChange","onClick","uploadedImages","image","imgIndex","src","url","alt","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction EventPromotion() {\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/volunteers/events')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched event and volunteer data:', data);\n        setEventVolunteerData(data);\n      })\n      .catch((error) => console.error('Error fetching event and volunteer data:', error));\n  }, []);\n\n  const handleFileChange = (event, eventId) => {\n    const files = event.target.files;\n    setSelectedFiles((prevFiles) => ({\n      ...prevFiles,\n      [eventId]: files,\n    }));\n  };\n\n  const handleUpload = (eventId) => {\n    const files = selectedFiles[eventId];\n    if (!files) return;\n\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('images', files[i]);\n    }\n\n    // Assuming your API endpoint for uploading images\n    fetch(`http://localhost:5000/api/events/${eventId}/upload-images`, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to upload images');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Images uploaded successfully:', data);\n        // Optionally, update UI with the new images\n      })\n      .catch((error) => console.error('Error uploading images:', error));\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      {eventVolunteerData.map((eventData, index) => (\n        <div className='row'>\n        <div key={index} className=\"col-md-12 mb-12\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{eventData.eventName}</h5>\n                <div className=\"mb-3\">\n                  <label htmlFor={`fileInput-${eventData.id}`} className=\"form-label\">Upload Images</label>\n                  <input\n                    type=\"file\"\n                    id={`fileInput-${eventData.id}`}\n                    className=\"form-control\"\n                    multiple\n                    onChange={(event) => handleFileChange(event, eventData.id)}\n                  />\n                  <button\n                    className=\"btn btn-primary mt-2\"\n                    onClick={() => handleUpload(eventData.id)}\n                  >\n                    Upload\n                  </button>\n                </div>\n\n                {/* Display previously uploaded images */}\n                <div className=\"row\">\n                  {eventData.uploadedImages && eventData.uploadedImages.length > 0 ? (\n                    eventData.uploadedImages.map((image, imgIndex) => (\n                      <div key={imgIndex} className=\"col-md-4 mb-3\">\n                        <div className=\"card\">\n                          <img src={image.url} className=\"card-img-top\" alt=\"Event\" />\n                          <div className=\"card-body\">\n                            <p className=\"card-text\">{image.fileName}</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <p>No images uploaded for this event.</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default EventPromotion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}