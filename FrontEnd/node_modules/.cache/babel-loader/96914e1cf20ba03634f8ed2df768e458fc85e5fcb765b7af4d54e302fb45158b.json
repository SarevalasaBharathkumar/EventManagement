{"ast":null,"code":"import{useState,useEffect}from'react';const useVisibilityChange=()=>{const[isForeground,setIsForeground]=useState(true);useEffect(()=>{const handleVisibilityChange=()=>{setIsForeground(document.visibilityState==='visible');};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[]);return isForeground;};export default useVisibilityChange;","map":{"version":3,"names":["useState","useEffect","useVisibilityChange","isForeground","setIsForeground","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/useVisibilityChange.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useVisibilityChange = () => {\n  const [isForeground, setIsForeground] = useState(true);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      setIsForeground(document.visibilityState === 'visible');\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  return isForeground;\n};\n\nexport default useVisibilityChange;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,sBAAsB,CAAGA,CAAA,GAAM,CACnCD,eAAe,CAACE,QAAQ,CAACC,eAAe,GAAK,SAAS,CAAC,CACzD,CAAC,CAEDD,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,CAAEH,sBAAsB,CAAC,CAErE,MAAO,IAAM,CACXC,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,CAAEJ,sBAAsB,CAAC,CAC1E,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAF,YAAY,CACrB,CAAC,CAED,cAAe,CAAAD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}