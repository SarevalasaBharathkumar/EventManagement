{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPromotion() {\n  _s();\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5000/api/volunteers/events').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched event and volunteer data:', data);\n      setEventVolunteerData(data);\n    }).catch(error => console.error('Error fetching event and volunteer data:', error));\n  }, []);\n  const handleFileChange = (event, eventId) => {\n    setImageFiles(prev => ({\n      ...prev,\n      [eventId]: event.target.files[0] // Store the file for the specific event\n    }));\n  };\n  const handleUpload = eventId => {\n    const formData = new FormData();\n    formData.append('image', imageFiles[eventId]); // Append the image file\n\n    fetch(`http://localhost:5000/api/volunteers/events/${eventId}/upload`, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Upload successful:', data);\n      // Optionally, update your eventVolunteerData state to show the uploaded image\n    }).catch(error => console.error('Error uploading image:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: eventVolunteerData.map(eventData => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: eventData.eventName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => handleFileChange(e, eventData._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpload(eventData._id),\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, eventData._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPromotion, \"QwDm3I29WasP2CEQeTqbRGzhIwg=\");\n_c = EventPromotion;\nexport default EventPromotion;\nvar _c;\n$RefreshReg$(_c, \"EventPromotion\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventPromotion","_s","eventVolunteerData","setEventVolunteerData","imageFiles","setImageFiles","fetch","then","response","ok","Error","json","data","console","log","catch","error","handleFileChange","event","eventId","prev","target","files","handleUpload","formData","FormData","append","method","body","children","map","eventData","className","eventName","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","_id","onClick","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css';\n\nfunction EventPromotion() {\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/volunteers/events')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched event and volunteer data:', data);\n        setEventVolunteerData(data);\n      })\n      .catch((error) => console.error('Error fetching event and volunteer data:', error));\n  }, []);\n\n  const handleFileChange = (event, eventId) => {\n    setImageFiles((prev) => ({\n      ...prev,\n      [eventId]: event.target.files[0], // Store the file for the specific event\n    }));\n  };\n\n  const handleUpload = (eventId) => {\n    const formData = new FormData();\n    formData.append('image', imageFiles[eventId]); // Append the image file\n\n    fetch(`http://localhost:5000/api/volunteers/events/${eventId}/upload`, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Upload successful:', data);\n        // Optionally, update your eventVolunteerData state to show the uploaded image\n      })\n      .catch((error) => console.error('Error uploading image:', error));\n  };\n\n  return (\n    <div>\n      {eventVolunteerData.map((eventData) => (\n        <div key={eventData._id} className=\"event-container\">\n          <h2>{eventData.eventName}</h2>\n          <input\n            type=\"file\"\n            onChange={(e) => handleFileChange(e, eventData._id)}\n          />\n          <button onClick={() => handleUpload(eventData._id)}>Upload Image</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default EventPromotion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}