{"ast":null,"code":"// firebase.js //path src\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging'; // https://firebase.google.com/docs/web/setup#available-libraries\nimport axios from 'axios';\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VCDW8XtHsMs-Smh3CyhQC4GBeNqUOw\",\n  authDomain: \"event-management-8c4d4.firebaseapp.com\",\n  projectId: \"event-management-8c4d4\",\n  storageBucket: \"event-management-8c4d4.appspot.com\",\n  messagingSenderId: \"763831488241\",\n  appId: \"1:763831488241:web:393a46c889d7910f6aa350\",\n  measurementId: \"G-L5RD59TYLT\"\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebnaseConfig);\n}\nconst messaging = firebase.messaging();\nconst generateToken = async () => {\n  try {\n    // Ensure the service worker is active\n    await navigator.serviceWorker.ready;\n\n    // Generate the token\n    const token = await messaging.getToken({\n      vapidKey: 'YOUR_PUBLIC_VAPID_KEY'\n    });\n    console.log('Generated token:', token);\n  } catch (error) {\n    console.error('Error generating token:', error);\n  }\n};\nconst handleForegroundMessages = () => {\n  onMessage(messaging, payload => {\n    console.log('Message received in foreground: ', payload);\n    const {\n      title,\n      body\n    } = payload.notification;\n    new Notification(title, {\n      body\n    });\n  });\n};\nexport { messaging, getToken, onMessage, generateToken, handleForegroundMessages };","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","axios","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","firebnaseConfig","messaging","generateToken","navigator","serviceWorker","ready","token","vapidKey","console","log","error","handleForegroundMessages","payload","title","body","notification","Notification"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/firebase.js"],"sourcesContent":["// firebase.js //path src\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';// https://firebase.google.com/docs/web/setup#available-libraries\nimport axios from 'axios';\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VCDW8XtHsMs-Smh3CyhQC4GBeNqUOw\",\n  authDomain: \"event-management-8c4d4.firebaseapp.com\",\n  projectId: \"event-management-8c4d4\",\n  storageBucket: \"event-management-8c4d4.appspot.com\",\n  messagingSenderId: \"763831488241\",\n  appId: \"1:763831488241:web:393a46c889d7910f6aa350\",\n  measurementId: \"G-L5RD59TYLT\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebnaseConfig);\n}\n\nconst messaging = firebase.messaging();\n\nconst generateToken = async () => {\n  try {\n    // Ensure the service worker is active\n    await navigator.serviceWorker.ready;\n\n    // Generate the token\n    const token = await messaging.getToken({ vapidKey: 'YOUR_PUBLIC_VAPID_KEY' });\n    console.log('Generated token:', token);\n  } catch (error) {\n    console.error('Error generating token:', error);\n  }\n};\n\nconst handleForegroundMessages = () => {\n  onMessage(messaging, (payload) => {\n    console.log('Message received in foreground: ', payload);\n\n    const { title, body } = payload.notification;\n    new Notification(title, { body });\n  });\n};\nexport { messaging, getToken, onMessage, generateToken,handleForegroundMessages };"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB,CAAC;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE;EACzBF,QAAQ,CAACb,aAAa,CAACgB,eAAe,CAAC;AACzC;AAEA,MAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAS,CAAC,CAAC;AAEtC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF;IACA,MAAMC,SAAS,CAACC,aAAa,CAACC,KAAK;;IAEnC;IACA,MAAMC,KAAK,GAAG,MAAML,SAAS,CAACf,QAAQ,CAAC;MAAEqB,QAAQ,EAAE;IAAwB,CAAC,CAAC;IAC7EC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC;AAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EACrCxB,SAAS,CAACc,SAAS,EAAGW,OAAO,IAAK;IAChCJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEG,OAAO,CAAC;IAExD,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,OAAO,CAACG,YAAY;IAC5C,IAAIC,YAAY,CAACH,KAAK,EAAE;MAAEC;IAAK,CAAC,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;AACD,SAASb,SAAS,EAAEf,QAAQ,EAAEC,SAAS,EAAEe,aAAa,EAACS,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}