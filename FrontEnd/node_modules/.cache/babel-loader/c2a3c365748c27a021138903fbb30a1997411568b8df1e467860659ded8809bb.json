{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/FeedbackAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport './FeedbackAnalytics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackAnalytics = () => {\n  _s();\n  const [completedEvents, setCompletedEvents] = useState([]);\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  const [rating, setRating] = useState(0);\n  const [textFeedback, setTextFeedback] = useState('');\n  useEffect(() => {\n    fetchCompletedEvents();\n  }, []);\n  const fetchCompletedEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/feedback/completedEvents');\n      setCompletedEvents(response.data.completedEvents);\n    } catch (error) {\n      console.error('Error fetching completed events:', error);\n    }\n  };\n  const handleAddFeedback = eventId => {\n    setSelectedEventId(eventId);\n    setShowFeedbackForm(true);\n  };\n  const handleFeedbackFormSubmit = async e => {\n    e.preventDefault();\n\n    // Validate rating\n    if (rating < 1 || rating > 5) {\n      alert('Rating must be between 1 and 5.');\n      return;\n    }\n\n    // Fetch user data from localStorage\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    // Prepare new feedback object\n    const newFeedback = {\n      eventId: selectedEventId,\n      email: userData[0],\n      // Assuming userData contains email at index 0\n      rating,\n      text: textFeedback\n    };\n    try {\n      // Send POST request to submit feedback\n      const response = await axios.post('http://localhost:5000/api/feedback/submitFeedback', newFeedback);\n\n      // Show success message and disable feedback form\n      alert('Feedback submitted successfully');\n      setShowFeedbackForm(false);\n      resetFeedbackForm();\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n  const resetFeedbackForm = () => {\n    setRating(0);\n    setTextFeedback('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completed Events for Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-cards-container\",\n      children: completedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"event-card\",\n        children: [event.imageUrl && /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: event.imageUrl,\n          alt: event.eventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: event.eventName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleAddFeedback(event._id),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showFeedbackForm,\n      onHide: () => setShowFeedbackForm(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleFeedbackFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"rating\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Rating (1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"1\",\n              max: \"5\",\n              value: rating,\n              onChange: e => setRating(parseInt(e.target.value)),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"textFeedback\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Text Feedback (Max 30 characters)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              maxLength: 30,\n              value: textFeedback,\n              onChange: e => setTextFeedback(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackAnalytics, \"uP+2ygEbjtGsDEnH9kcurgYISDQ=\");\n_c = FeedbackAnalytics;\nexport default FeedbackAnalytics;\nvar _c;\n$RefreshReg$(_c, \"FeedbackAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Modal","Form","axios","jsxDEV","_jsxDEV","FeedbackAnalytics","_s","completedEvents","setCompletedEvents","showFeedbackForm","setShowFeedbackForm","selectedEventId","setSelectedEventId","rating","setRating","textFeedback","setTextFeedback","fetchCompletedEvents","response","get","data","error","console","handleAddFeedback","eventId","handleFeedbackFormSubmit","e","preventDefault","alert","userData","JSON","parse","localStorage","getItem","newFeedback","email","text","post","resetFeedbackForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","index","imageUrl","Img","variant","src","alt","eventName","Body","Title","onClick","_id","show","onHide","Header","closeButton","onSubmit","Group","controlId","Label","Control","type","min","max","value","onChange","parseInt","target","required","as","rows","maxLength","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/FeedbackAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Modal, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport './FeedbackAnalytics.css';\n\nconst FeedbackAnalytics = () => {\n  const [completedEvents, setCompletedEvents] = useState([]);\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  const [rating, setRating] = useState(0);\n  const [textFeedback, setTextFeedback] = useState('');\n\n  useEffect(() => {\n    fetchCompletedEvents();\n  }, []);\n\n  const fetchCompletedEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/feedback/completedEvents');\n      setCompletedEvents(response.data.completedEvents);\n    } catch (error) {\n      console.error('Error fetching completed events:', error);\n    }\n  };\n\n  const handleAddFeedback = (eventId) => {\n    setSelectedEventId(eventId);\n    setShowFeedbackForm(true);\n  };\n\n  const handleFeedbackFormSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate rating\n    if (rating < 1 || rating > 5) {\n      alert('Rating must be between 1 and 5.');\n      return;\n    }\n  \n    // Fetch user data from localStorage\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    \n    // Prepare new feedback object\n    const newFeedback = {\n      eventId: selectedEventId,\n      email: userData[0], // Assuming userData contains email at index 0\n      rating,\n      text: textFeedback\n    };\n  \n    try {\n      // Send POST request to submit feedback\n      const response = await axios.post('http://localhost:5000/api/feedback/submitFeedback', newFeedback);\n  \n      // Show success message and disable feedback form\n      alert('Feedback submitted successfully');\n      setShowFeedbackForm(false);\n      resetFeedbackForm();\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n  \n\n  const resetFeedbackForm = () => {\n    setRating(0);\n    setTextFeedback('');\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Completed Events for Feedback</h2>\n      <div className=\"event-cards-container\">\n        {completedEvents.map((event, index) => (\n          <Card key={index} className=\"event-card\">\n            {event.imageUrl && (\n              <Card.Img variant=\"top\" src={event.imageUrl} alt={event.eventName} />\n            )}\n            <Card.Body>\n              <Card.Title>{event.eventName}</Card.Title>\n              <Button variant=\"primary\" onClick={() => handleAddFeedback(event._id)}>\n                Add Feedback\n              </Button>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n\n      <Modal show={showFeedbackForm} onHide={() => setShowFeedbackForm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Feedback</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleFeedbackFormSubmit}>\n            <Form.Group controlId=\"rating\">\n              <Form.Label>Rating (1-5)</Form.Label>\n              <Form.Control\n                type=\"number\"\n                min=\"1\"\n                max=\"5\"\n                value={rating}\n                onChange={(e) => setRating(parseInt(e.target.value))}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"textFeedback\">\n              <Form.Label>Text Feedback (Max 30 characters)</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                maxLength={30}\n                value={textFeedback}\n                onChange={(e) => setTextFeedback(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit Feedback\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FeedbackAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}