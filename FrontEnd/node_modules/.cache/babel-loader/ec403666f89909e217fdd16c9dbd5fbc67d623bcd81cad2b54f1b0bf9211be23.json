{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport axios from 'axios';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VCDW8XtHsMs-Smh3CyhQC4GBeNqUOw\",\n  authDomain: \"event-management-8c4d4.firebaseapp.com\",\n  projectId: \"event-management-8c4d4\",\n  storageBucket: \"event-management-8c4d4.appspot.com\",\n  messagingSenderId: \"763831488241\",\n  appId: \"1:763831488241:web:393a46c889d7910f6aa350\",\n  measurementId: \"G-L5RD59TYLT\"\n};\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nconst generateToken = async () => {\n  try {\n    const permission = await Notification.requestPermission();\n    console.log(permission);\n    if (permission === \"granted\") {\n      console.log(permission);\n\n      // Ensure service worker is ready before generating token\n      const registration = await navigator.serviceWorker.ready;\n      const token = await getToken(messaging, {\n        vapidKey: \"BF9Q0ytyvFzr7aZRCqwNQRhYGhTkO9NFZyQDU_FUNQ5rV0jcZ0_hYjjB9yd5CGzFGQrPDLEDSX03K8_FR1d3v6g\",\n        serviceWorkerRegistration: registration\n      });\n      console.log(token);\n    }\n  } catch (error) {\n    console.error('Error generating token:', error);\n  }\n};\nconst handleForegroundMessages = () => {\n  onMessage(messaging, payload => {\n    console.log('Message received in foreground: ', payload);\n    const {\n      title,\n      body\n    } = payload.notification;\n    new Notification(title, {\n      body\n    });\n  });\n};\nexport { messaging, getToken, onMessage, generateToken, handleForegroundMessages };","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","axios","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","generateToken","permission","Notification","requestPermission","console","log","registration","navigator","serviceWorker","ready","token","vapidKey","serviceWorkerRegistration","error","handleForegroundMessages","payload","title","body","notification"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport axios from 'axios';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VCDW8XtHsMs-Smh3CyhQC4GBeNqUOw\",\n  authDomain: \"event-management-8c4d4.firebaseapp.com\",\n  projectId: \"event-management-8c4d4\",\n  storageBucket: \"event-management-8c4d4.appspot.com\",\n  messagingSenderId: \"763831488241\",\n  appId: \"1:763831488241:web:393a46c889d7910f6aa350\",\n  measurementId: \"G-L5RD59TYLT\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\n\nconst generateToken = async () => {\n  try {\n    const permission = await Notification.requestPermission();\n    console.log(permission);\n    if (permission === \"granted\") {\n      console.log(permission);\n\n      // Ensure service worker is ready before generating token\n      const registration = await navigator.serviceWorker.ready;\n      const token = await getToken(messaging, {\n        vapidKey: \"BF9Q0ytyvFzr7aZRCqwNQRhYGhTkO9NFZyQDU_FUNQ5rV0jcZ0_hYjjB9yd5CGzFGQrPDLEDSX03K8_FR1d3v6g\",\n        serviceWorkerRegistration: registration\n      });\n\n      console.log(token);\n    }\n  } catch (error) {\n    console.error('Error generating token:', error);\n  }\n}\n\nconst handleForegroundMessages = () => {\n  onMessage(messaging, (payload) => {\n    console.log('Message received in foreground: ', payload);\n\n    const { title, body } = payload.notification;\n    new Notification(title, { body });\n  });\n};\n\nexport { messaging, getToken, onMessage, generateToken, handleForegroundMessages };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGb,YAAY,CAACY,GAAG,CAAC;AAEnC,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;IACzDC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IACvB,IAAIA,UAAU,KAAK,SAAS,EAAE;MAC5BG,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;;MAEvB;MACA,MAAMK,YAAY,GAAG,MAAMC,SAAS,CAACC,aAAa,CAACC,KAAK;MACxD,MAAMC,KAAK,GAAG,MAAMvB,QAAQ,CAACY,SAAS,EAAE;QACtCY,QAAQ,EAAE,yFAAyF;QACnGC,yBAAyB,EAAEN;MAC7B,CAAC,CAAC;MAEFF,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IACpB;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC;AAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EACrC1B,SAAS,CAACW,SAAS,EAAGgB,OAAO,IAAK;IAChCX,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEU,OAAO,CAAC;IAExD,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,OAAO,CAACG,YAAY;IAC5C,IAAIhB,YAAY,CAACc,KAAK,EAAE;MAAEC;IAAK,CAAC,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,SAASlB,SAAS,EAAEZ,QAAQ,EAAEC,SAAS,EAAEY,aAAa,EAAEc,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}