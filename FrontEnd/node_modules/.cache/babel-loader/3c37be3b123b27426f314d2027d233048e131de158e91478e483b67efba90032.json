{"ast":null,"code":"// src/swDev.js\nimport { getMessaging, getToken } from 'firebase/messaging';\n\n// src/swDev.js\nexport const registerServiceWorker = async () => {\n  try {\n    const registration = await navigator.serviceWorker.register('/firebase-messaging-sw.js');\n    console.log('Service Worker registered:', registration);\n\n    // Get token and handle messaging\n    const messaging = getMessaging();\n    const token = await getToken(messaging, {\n      vapidKey: 'YOUR_VAPID_KEY'\n    });\n    console.log('Token:', token);\n  } catch (error) {\n    console.error('Service Worker registration failed:', error);\n  }\n};","map":{"version":3,"names":["getMessaging","getToken","registerServiceWorker","registration","navigator","serviceWorker","register","console","log","messaging","token","vapidKey","error"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/swDev.js"],"sourcesContent":["// src/swDev.js\nimport { getMessaging, getToken } from 'firebase/messaging';\n\n\n// src/swDev.js\nexport const registerServiceWorker = async () => {\n  try {\n    const registration = await navigator.serviceWorker.register('/firebase-messaging-sw.js');\n    console.log('Service Worker registered:', registration);\n    \n    // Get token and handle messaging\n    const messaging = getMessaging();\n    const token = await getToken(messaging, { vapidKey: 'YOUR_VAPID_KEY' });\n    console.log('Token:', token);\n  } catch (error) {\n    console.error('Service Worker registration failed:', error);\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,QAAQ,QAAQ,oBAAoB;;AAG3D;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACF,MAAMC,YAAY,GAAG,MAAMC,SAAS,CAACC,aAAa,CAACC,QAAQ,CAAC,2BAA2B,CAAC;IACxFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,YAAY,CAAC;;IAEvD;IACA,MAAMM,SAAS,GAAGT,YAAY,CAAC,CAAC;IAChC,MAAMU,KAAK,GAAG,MAAMT,QAAQ,CAACQ,SAAS,EAAE;MAAEE,QAAQ,EAAE;IAAiB,CAAC,CAAC;IACvEJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,KAAK,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;EAC7D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}