{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css'; // Your custom CSS (if any)\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPromotion() {\n  _s();\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState({});\n  const [uploadedImages, setUploadedImages] = useState({});\n  useEffect(() => {\n    // Fetch events and their volunteer data\n    fetch('http://localhost:5000/api/volunteers/events').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched event and volunteer data:', data);\n      setEventVolunteerData(data);\n      setLoading(false);\n      data.forEach(event => {\n        // Fetch associated images for each event\n        fetch(`http://localhost:5000/api/volunteers/events/${event._id}/images`).then(res => res.json()).then(images => {\n          setUploadedImages(prev => ({\n            ...prev,\n            [event._id]: images\n          }));\n        });\n      });\n    }).catch(error => {\n      console.error('Error fetching event and volunteer data:', error);\n      setMessage('Error fetching data');\n      setLoading(false);\n    });\n  }, []);\n  const handleFileChange = (event, eventId) => {\n    setImageFiles(prev => ({\n      ...prev,\n      [eventId]: event.target.files[0]\n    }));\n  };\n  const handleUpload = eventId => {\n    const formData = new FormData();\n    formData.append('image', imageFiles[eventId]);\n    fetch(`http://localhost:5000/api/volunteers/events/${eventId}/upload`, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Upload successful:', data);\n      setMessage(prev => ({\n        ...prev,\n        [eventId]: 'Upload successful!'\n      }));\n      setImageFiles(prev => ({\n        ...prev,\n        [eventId]: null\n      }));\n      // Fetch the new image list after upload\n      fetch(`http://localhost:5000/api/volunteers/events/${eventId}/images`).then(res => res.json()).then(images => {\n        setUploadedImages(prev => ({\n          ...prev,\n          [eventId]: images\n        }));\n      });\n    }).catch(error => {\n      console.error('Error uploading image:', error);\n      setMessage(prev => ({\n        ...prev,\n        [eventId]: 'Error uploading image'\n      }));\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [Object.values(message).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: msg\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: eventVolunteerData.map(eventData => {\n        var _uploadedImages$event;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: eventData.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), (_uploadedImages$event = uploadedImages[eventData._id]) === null || _uploadedImages$event === void 0 ? void 0 : _uploadedImages$event.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/api/images/${image.filename}`,\n                alt: image.filename,\n                className: \"img-fluid mb-2\",\n                style: {\n                  maxHeight: '200px',\n                  objectFit: 'cover'\n                }\n              }, image._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(e, eventData._id),\n                className: \"form-control mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), imageFiles[eventData._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Selected file:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), \" \", imageFiles[eventData._id].name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpload(eventData._id),\n                className: \"btn btn-primary\",\n                disabled: !imageFiles[eventData._id] // Disable if no file selected\n                ,\n                children: \"Upload Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, eventData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPromotion, \"vuw4waQZzYvtPBZ9Q/h8p0gNDNg=\");\n_c = EventPromotion;\nexport default EventPromotion;\nvar _c;\n$RefreshReg$(_c, \"EventPromotion\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventPromotion","_s","eventVolunteerData","setEventVolunteerData","imageFiles","setImageFiles","loading","setLoading","message","setMessage","uploadedImages","setUploadedImages","fetch","then","response","ok","Error","json","data","console","log","forEach","event","_id","res","images","prev","catch","error","handleFileChange","eventId","target","files","handleUpload","formData","FormData","append","method","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","msg","index","eventData","_uploadedImages$event","eventName","image","src","filename","alt","style","maxHeight","objectFit","type","onChange","e","name","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/components/EventPromotion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminVolunteer.css'; // Your custom CSS (if any)\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction EventPromotion() {\n  const [eventVolunteerData, setEventVolunteerData] = useState([]);\n  const [imageFiles, setImageFiles] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState({});\n  const [uploadedImages, setUploadedImages] = useState({});\n\n  useEffect(() => {\n    // Fetch events and their volunteer data\n    fetch('http://localhost:5000/api/volunteers/events')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched event and volunteer data:', data);\n        setEventVolunteerData(data);\n        setLoading(false);\n        data.forEach(event => {\n          // Fetch associated images for each event\n          fetch(`http://localhost:5000/api/volunteers/events/${event._id}/images`)\n            .then((res) => res.json())\n            .then((images) => {\n              setUploadedImages((prev) => ({\n                ...prev,\n                [event._id]: images,\n              }));\n            });\n        });\n      })\n      .catch((error) => {\n        console.error('Error fetching event and volunteer data:', error);\n        setMessage('Error fetching data');\n        setLoading(false);\n      });\n  }, []);\n\n  const handleFileChange = (event, eventId) => {\n    setImageFiles((prev) => ({\n      ...prev,\n      [eventId]: event.target.files[0],\n    }));\n  };\n\n  const handleUpload = (eventId) => {\n    const formData = new FormData();\n    formData.append('image', imageFiles[eventId]);\n\n    fetch(`http://localhost:5000/api/volunteers/events/${eventId}/upload`, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Upload successful:', data);\n        setMessage((prev) => ({ ...prev, [eventId]: 'Upload successful!' }));\n        setImageFiles((prev) => ({ ...prev, [eventId]: null }));\n        // Fetch the new image list after upload\n        fetch(`http://localhost:5000/api/volunteers/events/${eventId}/images`)\n          .then((res) => res.json())\n          .then((images) => {\n            setUploadedImages((prev) => ({\n              ...prev,\n              [eventId]: images,\n            }));\n          });\n      })\n      .catch((error) => {\n        console.error('Error uploading image:', error);\n        setMessage((prev) => ({ ...prev, [eventId]: 'Error uploading image' }));\n      });\n  };\n\n  if (loading) {\n    return <div className=\"text-center mt-5\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"container mt-4\">\n      {Object.values(message).map((msg, index) => (\n        <div key={index} className=\"alert alert-info\">{msg}</div>\n      ))}\n      <div className=\"row\">\n        {eventVolunteerData.map((eventData) => (\n          <div key={eventData._id} className=\"col-md-12 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{eventData.eventName}</h5>\n                {uploadedImages[eventData._id]?.map((image) => (\n                  <img\n                    key={image._id}\n                    src={`http://localhost:5000/api/images/${image.filename}`}\n                    alt={image.filename}\n                    className=\"img-fluid mb-2\"\n                    style={{ maxHeight: '200px', objectFit: 'cover' }}\n                  />\n                ))}\n                <input\n                  type=\"file\"\n                  onChange={(e) => handleFileChange(e, eventData._id)}\n                  className=\"form-control mb-2\"\n                />\n                {imageFiles[eventData._id] && (\n                  <div className=\"mb-2\">\n                    <strong>Selected file:</strong> {imageFiles[eventData._id].name}\n                  </div>\n                )}\n                <button\n                  onClick={() => handleUpload(eventData._id)}\n                  className=\"btn btn-primary\"\n                  disabled={!imageFiles[eventData._id]} // Disable if no file selected\n                >\n                  Upload Image\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default EventPromotion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}