{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Button,Card,Modal,Form,Alert}from'react-bootstrap';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VolunteerManagement=_ref=>{let{userEmail}=_ref;const[events,setEvents]=useState([]);const[showRegisterForm,setShowRegisterForm]=useState(false);const[selectedEvent,setSelectedEvent]=useState(null);const[name,setName]=useState('');const[collegeId,setCollegeId]=useState('');const[phoneNumber,setPhoneNumber]=useState('');const[registeredEvents,setRegisteredEvents]=useState(new Set());// Track registered events\nconst[alertMessage,setAlertMessage]=useState('');const userData=JSON.parse(localStorage.getItem('userData'));// Memoize the fetchEvents function using useCallback\nconst fetchEvents=useCallback(async()=>{try{const response=await axios.get('http://localhost:5000/api/events/getEvents');const eventData=response.data;// Check registration status for each event\nconst updatedEvents=await Promise.all(eventData.map(async event=>{const registrationStatus=await axios.post('http://localhost:5000/api/volunteers/checkStatus',{eventId:event._id,email:userData[0],volunteersNeeded:event.volunteersNeeded});return{...event,isRegistered:registrationStatus.data.isRegistered,isClosed:registrationStatus.data.isClosed};}));setEvents(updatedEvents);// Update registered events state\nconst registeredEventIds=updatedEvents.filter(event=>event.isRegistered).map(event=>event._id);setRegisteredEvents(new Set(registeredEventIds));}catch(error){console.error('Error fetching events:',error);}},[userData]);// Include userData as a dependency because fetchEvents uses it\n// Fetch events when the component mounts\nuseEffect(()=>{fetchEvents();},[fetchEvents]);// Now fetchEvents is stable and can be safely included as a dependency\nconst handleShowRegisterForm=event=>{setSelectedEvent(event);setShowRegisterForm(true);};const handleRegister=async e=>{e.preventDefault();try{const newVolunteer={eventId:selectedEvent._id,name,collegeId,phoneNumber,volunteersNeeded:selectedEvent.volunteersNeeded,email:userData[0]// Send email from login details\n};const response=await axios.post('http://localhost:5000/api/volunteers/register',newVolunteer);if(response.data.success){setAlertMessage('Registration successful!');setRegisteredEvents(prev=>new Set(prev.add(selectedEvent._id)));// Update registered events state\nfetchEvents();// Refresh event data after registration\nsetShowRegisterForm(false);// Close the form after registration\n}else{setAlertMessage(response.data.message);}}catch(error){console.error('Error registering volunteer:',error);setAlertMessage('Registration failed. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"event-cards-container\",children:events.map(event=>/*#__PURE__*/_jsxs(Card,{className:\"event-card\",children:[event.imageUrl&&/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:event.imageUrl,alt:event.eventName}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:event.eventName}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>handleShowRegisterForm(event),disabled:registeredEvents.has(selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent._id)||(selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent.isClosed),children:event.isClosed?'Closed':registeredEvents.has(event._id)?'Registered':'Register'})]})]},event._id))}),/*#__PURE__*/_jsxs(Modal,{show:showRegisterForm,onHide:()=>setShowRegisterForm(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"Register for \",selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent.eventName]})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleRegister,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"collegeId\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"College ID\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:collegeId,onChange:e=>setCollegeId(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"phoneNumber\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Phone Number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:phoneNumber,onChange:e=>setPhoneNumber(e.target.value),required:true})]}),alertMessage&&/*#__PURE__*/_jsx(Alert,{variant:\"info\",children:alertMessage}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:registeredEvents.has(selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent._id)||(selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent.isClosed),children:selectedEvent!==null&&selectedEvent!==void 0&&selectedEvent.isClosed?'Closed':registeredEvents.has(selectedEvent===null||selectedEvent===void 0?void 0:selectedEvent._id)?'Registered':'Register'})]})})]})]});};export default VolunteerManagement;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","Card","Modal","Form","Alert","axios","jsx","_jsx","jsxs","_jsxs","VolunteerManagement","_ref","userEmail","events","setEvents","showRegisterForm","setShowRegisterForm","selectedEvent","setSelectedEvent","name","setName","collegeId","setCollegeId","phoneNumber","setPhoneNumber","registeredEvents","setRegisteredEvents","Set","alertMessage","setAlertMessage","userData","JSON","parse","localStorage","getItem","fetchEvents","response","get","eventData","data","updatedEvents","Promise","all","map","event","registrationStatus","post","eventId","_id","email","volunteersNeeded","isRegistered","isClosed","registeredEventIds","filter","error","console","handleShowRegisterForm","handleRegister","e","preventDefault","newVolunteer","success","prev","add","message","className","children","imageUrl","Img","variant","src","alt","eventName","Body","Title","onClick","disabled","has","show","onHide","Header","closeButton","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","required"],"sources":["/home/rguktrkvalley/rgukt-event-management/FrontEnd/src/components/VolunteerManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Card, Modal, Form, Alert } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst VolunteerManagement = ({ userEmail }) => {\n  const [events, setEvents] = useState([]);\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [name, setName] = useState('');\n  const [collegeId, setCollegeId] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [registeredEvents, setRegisteredEvents] = useState(new Set()); // Track registered events\n  const [alertMessage, setAlertMessage] = useState('');\n  const userData = JSON.parse(localStorage.getItem('userData'));\n\n  // Memoize the fetchEvents function using useCallback\n  const fetchEvents = useCallback(async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/events/getEvents');\n      const eventData = response.data;\n\n      // Check registration status for each event\n      const updatedEvents = await Promise.all(\n        eventData.map(async (event) => {\n          const registrationStatus = await axios.post('http://localhost:5000/api/volunteers/checkStatus', {\n            eventId: event._id,\n            email: userData[0],\n            volunteersNeeded: event.volunteersNeeded,\n          });\n          return {\n            ...event,\n            isRegistered: registrationStatus.data.isRegistered,\n            isClosed: registrationStatus.data.isClosed,\n          };\n        })\n      );\n      setEvents(updatedEvents);\n\n      // Update registered events state\n      const registeredEventIds = updatedEvents\n        .filter(event => event.isRegistered)\n        .map(event => event._id);\n      setRegisteredEvents(new Set(registeredEventIds));\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  }, [userData]); // Include userData as a dependency because fetchEvents uses it\n\n  // Fetch events when the component mounts\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]); // Now fetchEvents is stable and can be safely included as a dependency\n\n  const handleShowRegisterForm = (event) => {\n    setSelectedEvent(event);\n    setShowRegisterForm(true);\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const newVolunteer = {\n        eventId: selectedEvent._id,\n        name,\n        collegeId,\n        phoneNumber,\n        volunteersNeeded: selectedEvent.volunteersNeeded,\n        email: userData[0], // Send email from login details\n      };\n      const response = await axios.post('http://localhost:5000/api/volunteers/register', newVolunteer);\n\n      if (response.data.success) {\n        setAlertMessage('Registration successful!');\n        setRegisteredEvents(prev => new Set(prev.add(selectedEvent._id))); // Update registered events state\n        fetchEvents(); // Refresh event data after registration\n        setShowRegisterForm(false); // Close the form after registration\n      } else {\n        setAlertMessage(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error registering volunteer:', error);\n      setAlertMessage('Registration failed. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"event-cards-container\">\n        {events.map((event) => (\n          <Card key={event._id} className=\"event-card\">\n            {event.imageUrl && (\n              <Card.Img variant=\"top\" src={event.imageUrl} alt={event.eventName} />\n            )}\n            <Card.Body>\n              <Card.Title>{event.eventName}</Card.Title>\n              <Button\n                variant=\"primary\"\n                onClick={() => handleShowRegisterForm(event)}\n                disabled={registeredEvents.has(selectedEvent?._id) || selectedEvent?.isClosed}\n              >\n                {event.isClosed ? 'Closed' : registeredEvents.has(event._id) ? 'Registered' : 'Register'}\n              </Button>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n\n      <Modal show={showRegisterForm} onHide={() => setShowRegisterForm(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register for {selectedEvent?.eventName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleRegister}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group controlId=\"collegeId\">\n              <Form.Label>College ID</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={collegeId}\n                onChange={(e) => setCollegeId(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group controlId=\"phoneNumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                required\n              />\n            </Form.Group>\n            {alertMessage && <Alert variant=\"info\">{alertMessage}</Alert>}\n            <Button variant=\"primary\" type=\"submit\" disabled={registeredEvents.has(selectedEvent?._id) || selectedEvent?.isClosed}>\n              {selectedEvent?.isClosed ? 'Closed' : registeredEvents.has(selectedEvent?._id) ? 'Registered' : 'Register'}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default VolunteerManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}