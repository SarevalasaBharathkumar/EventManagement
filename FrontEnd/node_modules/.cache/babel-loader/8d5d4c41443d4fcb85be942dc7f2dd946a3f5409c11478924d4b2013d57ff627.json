{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/rgukt-event-management/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport EventPlanning from './components/EventPlanning';\nimport EventPromotion from './components/EventPromotion';\nimport VolunteerManagement from './components/VolunteerManagement';\nimport ResourceManagement from './components/ResourceManagement';\nimport FeedbackAnalytics from './components/FeedbackAnalytics';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { generateToken, handleForegroundMessages } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Register the service worker\n    if ('serviceWorker' in navigator) {\n      const swUrl = `${process.env.PUBLIC_URL}/firebase-messaging-sw.js`;\n      navigator.serviceWorker.register(swUrl).then(registration => {\n        // Check if there's a waiting service worker and activate it\n        if (registration.waiting) {\n          registration.waiting.postMessage({\n            type: 'SKIP_WAITING'\n          });\n        }\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  console.log('New content is available and will be used when all tabs are closed.');\n                } else {\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          }\n        };\n      }).catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n    }\n    generateToken();\n    handleForegroundMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/event-planning\",\n          element: /*#__PURE__*/_jsxDEV(EventPlanning, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/event-promotion\",\n          element: /*#__PURE__*/_jsxDEV(EventPromotion, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/volunteer-management\",\n          element: /*#__PURE__*/_jsxDEV(VolunteerManagement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/resource-management\",\n          element: /*#__PURE__*/_jsxDEV(ResourceManagement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/feedback-analytics\",\n          element: /*#__PURE__*/_jsxDEV(FeedbackAnalytics, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Route","Routes","Home","Dashboard","EventPlanning","EventPromotion","VolunteerManagement","ResourceManagement","FeedbackAnalytics","generateToken","handleForegroundMessages","jsxDEV","_jsxDEV","App","_s","navigator","swUrl","process","env","PUBLIC_URL","serviceWorker","register","then","registration","waiting","postMessage","type","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rguktrkvalley/rgukt-event-management/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport EventPlanning from './components/EventPlanning';\nimport EventPromotion from './components/EventPromotion';\nimport VolunteerManagement from './components/VolunteerManagement';\nimport ResourceManagement from './components/ResourceManagement';\nimport FeedbackAnalytics from './components/FeedbackAnalytics';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { generateToken, handleForegroundMessages } from './firebase';\n\nfunction App() {\n  useEffect(() => {\n    // Register the service worker\n    if ('serviceWorker' in navigator) {\n      const swUrl = `${process.env.PUBLIC_URL}/firebase-messaging-sw.js`;\n\n      navigator.serviceWorker.register(swUrl).then((registration) => {\n        // Check if there's a waiting service worker and activate it\n        if (registration.waiting) {\n          registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n        }\n\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  console.log('New content is available and will be used when all tabs are closed.');\n                } else {\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          }\n        };\n      }).catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n    }\n\n    generateToken();\n    handleForegroundMessages();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/event-planning\" element={<EventPlanning />} />\n          <Route path=\"/event-promotion\" element={<EventPromotion />} />\n          <Route path=\"/volunteer-management\" element={<VolunteerManagement />} />\n          <Route path=\"/resource-management\" element={<ResourceManagement />} />\n          <Route path=\"/feedback-analytics\" element={<FeedbackAnalytics />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}